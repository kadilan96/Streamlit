# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14f6zvr0ngStdaWhksYdmYgcNflF6OYch
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
# %matplotlib inline

import seaborn as sns

url="http://localhost:3030/iot"

df = pd.read_json(url)

df

df.loc[:,'accel_x']+df.loc[:,'accel_y']+df.loc[:,'accel_z']

df.insert(0, 'accel', round(np.sqrt(df.loc[:,'accel_x']**2+df.loc[:,'accel_y']**2+df.loc[:,'accel_z']**2), 2), allow_duplicates=False)
df.insert(0, 'gyro', round(np.sqrt(df.loc[:,'gyro_x']**2+df.loc[:,'gyro_y']**2+df.loc[:,'gyro_z']**2), 2), allow_duplicates=False)
df.insert(0, 'mag', round(np.sqrt(df.loc[:,'mag_x']**2+df.loc[:,'mag_y']**2+df.loc[:,'mag_z']**2), 2), allow_duplicates=False)
df = df[['date', 'accel_x', 'accel_y', 'accel_z', 'accel', 'gyro_x', 'gyro_y', 'gyro_z', 'gyro', 'mag_x', 'mag_y', 'mag_z', 'mag']]

df.head()

df.info()

df.isnull().sum()

df.describe()

df.plot(x='date', y=['accel_x','accel_y','accel_z','accel'], figsize=(12,5), title="Accelerometer Sensor")

df.tail(100).plot(x='date', y=['accel_x','accel_y','accel_z','accel'], figsize=(12,5), title="Accelerometer Sensor")

df.plot(x='date', y=['gyro_x','gyro_y','gyro_z','gyro'], figsize=(12,5), title="Gyro Sensor")

df.tail(100).plot(x='date', y=['gyro_x','gyro_y','gyro_z','gyro'], figsize=(12,5), title="Gyro Sensor")

df.plot(x='date', y=['mag_x','mag_y','mag_z','mag'], figsize=(12,5), title="Magnetic Sensor")

df.plot(x='date', y=['accel', 'gyro', 'mag'], figsize=(12,5), title="Sensors")

df2 = df.copy()
df2.insert(0,'tmp',1)

plt.title("Accelerometer Sensor")
sns.boxplot(x='tmp', y='accel',data=df2)
plt.show()

plt.title('Gyro Sensor')
sns.boxplot(x='tmp', y='gyro', data=df2)
plt.show()

plt.title('Magnetic Sensor')
sns.boxplot(x='tmp', y='mag', data=df2)
plt.show()

df2 = df.copy()
df2.insert(0,'','Accel')

plt.title("Accelerometer Sensor")
sns.violinplot(x='', y='accel',data=df2)

ax = plt.gca()
ax.axes.xaxis.set_visible(False)
plt.ylabel('')
plt.show()

plt.title('Gyro Sensor')
sns.violinplot(x='', y='gyro', data=df2)

ax = plt.gca()
ax.axes.xaxis.set_visible(False)
plt.ylabel('')
plt.show()

plt.title('Magnetic Sensor')
sns.violinplot(x='', y='mag', data=df2)

ax = plt.gca()
ax.axes.xaxis.set_visible(False)
plt.ylabel('')
plt.show()

df[['accel', 'gyro', 'mag']].mean().plot.bar(figsize=(8,6), title='Mean of Accel, Gyro and Mag')



df_sq=df[['date','accel', 'gyro', 'mag']];df_sq.head()

df_sq.set_index('date',inplace=True)

df_sq.resample('1S').mean().plot(figsize=(12,6))

df_sq.resample('60S').mean().plot(figsize=(12,6))

df_sq.resample('600S').mean().plot(figsize=(12,6))



